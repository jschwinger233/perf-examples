!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/liangzc/src/github.com/jschwinger233/perf/cpython310_backtrace/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
Close	bpf_bpf.go	/^func (m *bpfMaps) Close() error {$/;"	f	struct:main.bpfMaps	typeref:typename:error
Close	bpf_bpf.go	/^func (o *bpfObjects) Close() error {$/;"	f	struct:main.bpfObjects	typeref:typename:error
Close	bpf_bpf.go	/^func (p *bpfPrograms) Close() error {$/;"	f	struct:main.bpfPrograms	typeref:typename:error
Cpython310Bt	bpf_bpf.go	/^	Cpython310Bt *ebpf.Program `ebpf:"cpython310_bt"`$/;"	m	struct:main.bpfPrograms	typeref:typename:*ebpf.Program
Cpython310Bt	bpf_bpf.go	/^	Cpython310Bt *ebpf.ProgramSpec `ebpf:"cpython310_bt"`$/;"	m	struct:main.bpfProgramSpecs	typeref:typename:*ebpf.ProgramSpec
_BpfBytes	bpf_bpf.go	/^var _BpfBytes []byte$/;"	v	package:main	typeref:typename:[]byte
_BpfClose	bpf_bpf.go	/^func _BpfClose(closers ...io.Closer) error {$/;"	f	package:main	typeref:typename:error
__license	bpf.c	/^char __license[] SEC("license") = "Dual MIT\/GPL";$/;"	v	typeref:typename:char[]SEC ("license")
bpfMapSpecs	bpf_bpf.go	/^	bpfMapSpecs$/;"	M	struct:main.bpfSpecs	typeref:typename:bpfMapSpecs
bpfMapSpecs	bpf_bpf.go	/^type bpfMapSpecs struct {$/;"	s	package:main
bpfMaps	bpf_bpf.go	/^	bpfMaps$/;"	M	struct:main.bpfObjects	typeref:typename:bpfMaps
bpfMaps	bpf_bpf.go	/^type bpfMaps struct {$/;"	s	package:main
bpfObjects	bpf_bpf.go	/^type bpfObjects struct {$/;"	s	package:main
bpfProgramSpecs	bpf_bpf.go	/^	bpfProgramSpecs$/;"	M	struct:main.bpfSpecs	typeref:typename:bpfProgramSpecs
bpfProgramSpecs	bpf_bpf.go	/^type bpfProgramSpecs struct {$/;"	s	package:main
bpfPrograms	bpf_bpf.go	/^	bpfPrograms$/;"	M	struct:main.bpfObjects	typeref:typename:bpfPrograms
bpfPrograms	bpf_bpf.go	/^type bpfPrograms struct {$/;"	s	package:main
bpfSpecs	bpf_bpf.go	/^type bpfSpecs struct {$/;"	s	package:main
cpython310_bt	bpf.c	/^int cpython310_bt(struct bpf_perf_event_data *ctx)$/;"	f	typeref:typename:SEC ("perf_event")int
fd	main.go	/^	fd int$/;"	m	struct:main.profile	typeref:typename:int
loadBpf	bpf_bpf.go	/^func loadBpf() (*ebpf.CollectionSpec, error) {$/;"	f	package:main	typeref:typename:(*ebpf.CollectionSpec, error)
loadBpfObjects	bpf_bpf.go	/^func loadBpfObjects(obj interface{}, opts *ebpf.CollectionOptions) error {$/;"	f	package:main	typeref:typename:error
main	bpf_bpf.go	/^package main$/;"	p
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
profile	main.go	/^type profile struct {$/;"	s	package:main
